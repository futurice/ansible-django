---
- file: state=directory owner={{ user }} group={{ user }} recurse=yes path="{{ project_path }}shared/log"
- file: state=directory owner={{ user }} group={{ user }} recurse=yes path="{{ project_path }}shared/pids"
- file: state=directory owner={{ user }} group={{ user }} recurse=yes path="{{ project_path }}media"
- file: state=directory owner={{ user }} group={{ user }} recurse=yes path={{ release_path }}

- file: path={{project_path}}lite.db owner={{ user }} group={{ user }} mode=0644
  when: using_sqlite

- action: apt pkg={{item}} state=installed
  with_items: apt_packages

- name: Pull repository sources using RSA keys from deploying users own SSH config
  git: repo={{repo}} dest={{release_path}} version=master accept_hostkey=yes

- command: cp -f /root/{{ app_name }}_local_settings.py {{release_path}}local_settings.py
  ignore_errors: yes

- pip: name=virtualenv
- pip: requirements="{{release_path}}requirements.txt" virtualenv="{{ virtualenv_path }}"
  register: pip_result
  ignore_errors: True

- name: Install Django, when no requirements.txt provided
  pip: name=Django virtualenv="{{virtualenv_path}}"
  when: pip_result|failed

- django_manage: command="collectstatic --noinput" app_path={{release_path}} virtualenv="{{ virtualenv_path }}" settings="{{ django_settings}}"
  ignore_errors: True
- django_manage: command="migrate --noinput" app_path={{release_path}} virtualenv="{{ virtualenv_path }}" settings="{{ django_settings}}"

- apache2_module: state=present name=wsgi
  when: using_apache

- file: state=link path={{ release_current }} src={{ release_path }}
  register: django_release_symlink

- command: /bin/true
  notify:
      - reload and restart supervisor for project
  when: django_release_symlink|changed and using_supervisor

- command: /bin/true
  notify:
      - restart apache
  when: django_release_symlink|changed and using_apache
