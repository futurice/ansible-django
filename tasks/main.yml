---
- file: state=directory owner={{ django_user }} group={{ django_group }} recurse=yes path="{{ release_root }}shared/log"
- file: state=directory owner={{ django_user }} group={{ django_group }} recurse=yes path="{{ release_root }}shared/pids"
- file: state=directory owner={{ django_user }} group={{ django_group }} recurse=yes path="{{ release_root }}media"
- file: state=directory owner={{ django_user }} group={{ django_group }} recurse=yes path={{ release_root }}

- file: path={{release_root}}lite.db owner={{ django_user }} group={{ django_group }} mode=0644
  when: using_sqlite

- action: apt pkg={{item}} state=installed
  with_items: apt_packages

- name: Git Deploy
  when: git_repo
  include: ../../futurice.release/tasks/git_deploy.yml

- command: cp -f /root/{{ release_name }}_local_settings.py {{release_path}}local_settings.py
  ignore_errors: yes

- pip: name=virtualenv
- pip: requirements="{{release_path}}requirements.txt" virtualenv="{{release_venv}}"
  register: pip_result
  ignore_errors: True

- name: Install Django, when no requirements.txt provided
  pip: name=Django virtualenv="{{release_venv}}"
  when: pip_result|failed

- django_manage: command="collectstatic --noinput" app_path={{release_path}} virtualenv="{{ release_venv }}" settings="{{ django_settings}}"
  ignore_errors: True
- django_manage: command="migrate --noinput" app_path={{release_path}} virtualenv="{{ release_venv }}" settings="{{ django_settings}}"

- apache2_module: state=present name=wsgi
  when: using_apache

- file: state=link path={{ release_current }} src={{ release_path }}
  register: django_release_symlink

- command: /bin/true
  notify:
      - reload and restart supervisor for project
  when: django_release_symlink|changed and using_supervisor

- command: /bin/true
  notify:
      - restart apache
  when: django_release_symlink|changed and using_apache
